# CI wxRuby test release workflow
name: Testing Release builds

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  release-windows-binpkg:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} wxRuby Binpkg Release (${{ github.ref_name }})
    env:
      DOXYGEN_ROOT: ${{ github.workspace }}\doxygen
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            platform: 'x64'
            CXX: g++-12
            ruby: '3.3'
            swig: '4'

    steps:
      - name: Checkout wxRuby3
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup Ruby gems
        run: |
          bundle install

      - name: Cache Doxygen
        id: cache-doxygen
        uses: actions/cache@v4
        with:
          path: doxygen-1.10.0.windows.x64.bin.zip
          key: ${{ runner.os }}-doxygen

      - name: Download Doxygen tool
        if: steps.cache-doxygen.outputs.cache-hit != 'true'
        run: |
          wget.exe https://www.doxygen.nl/files/doxygen-1.10.0.windows.x64.bin.zip
          $hash = '2135c1d5bdd6e067b3d0c40a4daac5d63d0fee1b3f4d6ef1e4f092db0d632d5b'
          if ((Get-FileHash doxygen-1.10.0.windows.x64.bin.zip -Algorithm SHA256).Hash -ne $hash) {
            del doxygen-1.10.0.windows.x64.bin.zip
            throw "Doxygen Hash doesn't match!"
          }

      - name: Install Doxygen package
        run: |
          Expand-Archive -LiteralPath '.\doxygen-1.10.0.windows.x64.bin.zip' -DestinationPath $env:DOXYGEN_ROOT -Force
          echo "$env:DOXYGEN_ROOT" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Display build environment
        run: |
          echo "$env:PATH"
          ruby -v
          doxygen -v
          ridk exec bash -c 'gcc -v'
          ridk exec bash -c 'g++ -v'

      - name: Configure wxRuby3
        run: |
          bundle exec rake configure[--with-wxwin,--autoinstall]

      - name: Build wxRuby3
        run: |
          bundle exec rake build

      - name: Build wxRuby3 binpkg
        run: |
          bundle exec rake binpkg

      - name: Upload bin pkg as release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pkg/*.pkg
          tag: v0.9.7
          overwrite: true
          file_glob: true
  release-macosx-binpkg:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.os }} wxRuby Binpkg Release (${{ github.ref_name }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS 13
            runner: macos-13
            arch: x86_64
            ruby: '3.3'
          - name: macOS 14
            runner: macos-14
            arch: m1
            ruby: '3.3'

    steps:
      - name: Checkout wxRuby3
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup Ruby gems
        run: |
          bundle install

      - name: Display build environment
        run: |
          echo "$env:PATH"
          ruby -v

      - name: Configure wxRuby3
        run: |
          bundle exec rake configure[--with-wxwin,--autoinstall]

      - name: Build wxRuby3
        run: |
          bundle exec rake build

      - name: Build wxRuby3 binpkg
        run: |
          bundle exec rake binpkg

      - name: Upload bin pkg as release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pkg/*.pkg
          tag: v0.9.7
          overwrite: true
          file_glob: true
